# Stages are executed sequentially
stages:
  - test
  - package
  - push
  - deploy

# Pipeline to run tests upon changes to code 
run_tests:
  stage: test
  image: python:3.9
  script:
    - python --version
    - pip install pytest 
    - pip install -r requirements.txt
    - python -m pytest -vvv test_app.py
  rules:
    - changes: 
      - app.py
      - test_app.py


# Build docker and push to heroku ...
build_image:
  stage: package
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

push_to_heroku:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE

    - docker login --username=_  --password=$HEROKU_API_KEY registry.heroku.com
    - docker tag $CI_REGISTRY_IMAGE registry.heroku.com/language-detection-model/web:latest
    - docker push registry.heroku.com/language-detection-model/web:latest


deploy_to_heroku:
  image: node:latest
  stage: deploy
  services:
    - docker:dind
  script:
    - npm install -g heroku
    - heroku container:release web --app language-detection-model
